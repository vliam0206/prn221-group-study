@page "/groups/{id:guid}"
@using Domain.Entities.Posts;
@using Domain.Entities;
@using Microsoft.AspNetCore.Html;
@using Domain.Enums;
@using Newtonsoft.Json.Linq;
@using static LiveChatHub;
@model RazorPageWebApp.Pages.Groups.DetailsModel

@{
    ViewData["Title"] = "Details";
}

<!--Post Content-->
<main class="post-group container mx-3 pt-3">
    <section class="row">
        @if (Model.Group != null)
        {
            <section class="col-8">
                <div class="fs-2 fw-bold mb-3 d-flex justify-content-between">
                    <span>
                        @Html.DisplayFor(model => model.Group.Name)
                    </span>
                    @if (Model.AccountInGroup?.Role == RoleEnum.Admin)
                    {
                        <div class="btn-group">
                            <button type="button" class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="fas fa-cog"></i>
                                <span class="ms-1">Settings</span>
                            </button>
                            <ul class="dropdown-menu">
                                <li><a asp-page="/Groups/AdminGroupSetting" asp-route-id="@Model.Group.Id" class="dropdown-item">Group Settings</a></li>
                            </ul>
                        </div>
                    }
                    else if (Model.AccountInGroup?.Role == RoleEnum.Moderator)
                    {
                        <div class="btn-group">
                            <button type="button" class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="fas fa-cog"></i>
                                <span class="ms-1">Settings</span>
                            </button>
                            <ul class="dropdown-menu">
                                <li><a asp-page="/Groups/AdminGroupSetting" asp-route-id="@Model.Group.Id" class="dropdown-item">Group Settings</a></li>
                                <li><hr class="dropdown-divider"></li>
                                <li><a class="dropdown-item text-danger">Leave Group</a></li>
                            </ul>
                        </div>
                    }
                    @if (Model.AccountInGroup == null)
                    {
                        <span>
                            <a asp-page-handler="JoinGroup" asp-route-groupId="@Model.Group.Id"
                               class="btn bnt-light btn-outline-secondary">Join group</a>
                        </span>
                    }
                    else
                    {
                        if (Model.AccountInGroup.Role == RoleEnum.Member)
                        {
                            <div class="btn-group">
                                <button type="button" class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="fas fa-cog"></i>
                                    <span class="ms-1">Settings</span>
                                </button>
                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item text-danger">Leave Group</a></li>
                                </ul>
                            </div>
                        }
                    }
                </div>
                <div class="fs-5 fw-normal mb-3">@Html.DisplayFor(model => model.Group.Description)</div>
                @if (Model.AccountInGroup != null)
                {
                    <div class="input-group mb-3">
                        <a class="btn btn-outline-secondary me-5" asp-page="/Posts/CreatePost" asp-route-groupId="@Model.Group.Id" type="button">New Post</a>
                        <input type="text" class="form-control" placeholder="Recipient's username" aria-label="Recipient's username" aria-describedby="button-addon2">
                        <button class="btn btn-outline-secondary" type="button">Search</button>
                    </div>
                }
                @foreach (var post in Model.PostsInGroup.Items)
                {
                    <main class="d-flex my-2 border border-dark rounded">
                        <div class="col-lg-9 col-auto d-flex flex-column align-items-start">
                            <div class="dropdown w-100 d-flex justify-content-between">
                                <div class="d-flex w-100">
                                    @foreach (var tag in post.TagInPosts)
                                    {
                                        <a class="btn btn-outline-dark rounded m-2" asp-page="">@tag.Tag?.Name</a>
                                    }

                                </div>
                            </div>
                            <div class="w-100 p-2 align-self-end h-100 justify-content-between d-flex flex-column">
                                <div class="h3"><a class="link-dark" href="@Url.Content($"{Model.Group.Id}/view/{post.Id}")">@post.Topic</a></div>
                                <div class="d-block"><b>Created by:</b> @post.AccountCreated.Username</div>
                                <div class="reaction-container d-flex gap-x-2 justify-content-start align-content-end">
                                    <a class="like-item text-black text-decoration-underline"
                                       href="@Url.Content($"{Model.Group.Id}/view/{post.Id}")">Like: @post.Likes.Count</a>
                                    <a class="text-black"
                                       href="@Url.Content($"{Model.Group.Id}/view/{post.Id}")">Comment: @post.Comments.Count</a>
                                    <span class="text-black-50 align-self-center" style="font-size:0.75em">@post.CreationDate.ToLongDateString()</span>
                                </div>
                            </div>

                        </div>

                        <aside class="col-lg-3 card bg-transparent">
                            <div class="col-6 d-flex m-auto">
                                <img class="object-fit-contain card-img rounded" src="@post.Image" alt="@post.Topic" />
                            </div>
                        </aside>
                    </main>

                }
            </section>

            <!-- Chat-->
            @if (Model.AccountInGroup != null)
            {
                var messages = ViewData[AppConstants.LiveChatMSG(Model.Group.Id)] as List<LiveChatMessage> ?? new();
                <section class="col-4 d-flex justify-content-center align-self-end">

                    <div class="col-12">

                        <div class="card" id="live-chat" style="border-radius: 15px;">
                            <div class="card-header d-flex justify-content-between align-items-center p-3 bgSecColor txtPriColor border-bottom-0"
                                 style="border-top-left-radius: 15px; border-top-right-radius: 15px;">
                                <p class="mb-0 fw-bold">Live chat</p>
                            </div>
                            <div class="card-body ">
                                <div class="chat-container" style="height: 50vh; overflow-y: scroll">
                                    @foreach (var message in messages)
                                    {
                                        var id = message.User?.Id.ToString();
                                        @if (id != null && id.Equals(Model.HttpContext.Session.GetString("UserId")))
                                        {
                                            <div class="d-flex flex-row justify-content-end mb-4">
                                                <div class="p-2 me-2 border" style="border-radius: 15px; background-color: #fbfbfb;">
                                                    <p class="small mb-0">@message.Message</p>
                                                </div>
                                                <img src="@(message.User?.Avatar)"
                                                     alt="@(message.User?.Username)" style="width: 40px; height: 40px;">
                                            </div>
                                        }
                                        @if (id != null && !id.Equals(Model.HttpContext.Session.GetString("UserId")))
                                        {
                                            <div class="d-flex flex-row justify-content-start mb-4">
                                                <img src="@(message.User?.Avatar)"
                                                     alt="@(message.User?.Username)" style="width: 40px; height: 100%;">
                                                <div class="p-2 ms-2" style="border-radius: 15px; background-color: rgba(57, 192, 237,.2);">
                                                    <p class="small mb-0">
                                                        @message.Message
                                                    </p>
                                                </div>
                                            </div>
                                        }
                                    }
                                    <div class="d-flex flex-row justify-content-start mb-4">
                                        <div class="text-secondary">
                                            Chat something...
                                        </div>
                                    </div>
                                </div>



                                <form id="live-chat-form" data-userid="@Model.HttpContext.Session.GetString("UserId")"
                                      data-groupid="@Model.Group.Id"
                                      class="chat-chatbox form-outline">
                                    <textarea name="chatMessage" class="form-control" placeholder="Type Your Messages."
                                              rows="4"></textarea>
                                </form>

                            </div>
                        </div>

                    </div>

                </section>
            }
            <!-- End chat -->
        }
    </section>
</main>
<!-- Pagination -->
@{
    var prevDisable = Model.PostsInGroup.HasPrevious ? "" : "disabled";
    var nextDisable = Model.PostsInGroup.HasNext ? "" : "disabled";
}
<nav class="mt-3">
    <ul class="pagination">
        <li class="page-item @prevDisable">
            <a asp-page="/Groups/Details"
               asp-route-pageIndex="@(Model.PostsInGroup.PageIndex -1)"
               asp-route-id="@Model.Group.Id"
               class="page-link">Previous</a>
        </li>
        <li class="page-item @nextDisable">
            <a asp-page="/Groups/Details"
               asp-route-pageIndex="@(Model.PostsInGroup.PageIndex +1)"
               asp-route-id="@Model.Group.Id"
               class="page-link">Next</a>
        </li>
    </ul>
</nav>
<!-- End Pagination -->
@section Scripts{
    <script src="~/js/live-chat-realtimes.js"></script>
}

